### A CI workflow template that runs linting and python testing
### TODO: Modify as needed or as desired.

name: Test tap-cloudwatch

on: [push]

jobs:
  linting:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Only lint using the primary version used for dev
        python-version: ["3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install tools
      env:
        PIP_CONSTRAINT: ${{ github.workspace }}/.github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pipx install poetry
        pipx install tox
    - name: Install dependencies
      run: |
        poetry install
    - name: Lint
      run: |
        tox -e lint

  pytest:

    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - "3.13"
        - "3.12"
        - "3.11"
        - "3.10"
        - "3.9"
        - "3.8"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        allow-prereleases: true
    - name: Install tools
      env:
        PIP_CONSTRAINT: ${{ github.workspace }}/.github/workflows/constraints.txt
      run: |
        python -m pip install --upgrade pip
        pipx install poetry
    - name: Install dependencies
      run: |
        poetry env use python${{ matrix.python-version }}
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest --capture=no
